import 'package:flutter/material.dart';
import '../media_service.dart';
import '../components/html5_media_viewer.dart';

class MediaTestPage extends StatefulWidget {
  const MediaTestPage({super.key});

  @override
  State<MediaTestPage> createState() => _MediaTestPageState();
}

class _MediaTestPageState extends State<MediaTestPage> {
  final List<MediaItem> _testMedias = [
    // Image réelle du serveur local
    MediaItem(
      id: '1',
      title: 'Image du serveur local',
      description: 'Image uploadée sur notre serveur',
      filename: 'files-1761507762441-511752610.png',
      originalName: 'uploaded-image.png',
      url: '/uploads/files-1761507762441-511752610.png',
      mimetype: 'image/png',
      size: 1024000,
      type: 'image',
      tags: ['serveur', 'local'],
      uploadedBy: 'user1',
      isPublic: true,
      usageCount: 5,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    // Image externe pour comparaison
    MediaItem(
      id: '1b',
      title: 'Image externe',
      description: 'Une belle image de démonstration externe',
      filename: 'external.jpg',
      originalName: 'external-image.jpg',
      url: 'https://picsum.photos/800/600',
      mimetype: 'image/jpeg',
      size: 1024000,
      type: 'image',
      tags: ['test', 'externe'],
      uploadedBy: 'user1',
      isPublic: true,
      usageCount: 5,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '2',
      title: 'Vidéo de test',
      description: 'Une vidéo de démonstration HTML5',
      filename: 'test.mp4',
      originalName: 'demo-video.mp4',
      url: 'https://sample-videos.com/zip/10/mp4/360/SampleVideo.mp4',
      mimetype: 'video/mp4',
      size: 5120000,
      type: 'video',
      tags: ['vidéo', 'html5'],
      uploadedBy: 'user1',
      isPublic: true,
      usageCount: 10,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '3',
      title: 'Audio de test',
      description: 'Un fichier audio de démonstration',
      filename: 'test.mp3',
      originalName: 'demo-audio.mp3',
      url: 'https://sample-audios.com/test.mp3',
      mimetype: 'audio/mp3',
      size: 2048000,
      type: 'audio',
      tags: ['audio', 'musique'],
      uploadedBy: 'user1',
      isPublic: true,
      usageCount: 3,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '4',
      title: 'Deuxième image serveur',
      description: 'Autre image du serveur local',
      filename: 'files-1761509974286-104808463.png',
      originalName: 'second-image.png',
      url: '/uploads/files-1761509974286-104808463.png',
      mimetype: 'image/png',
      size: 856000,
      type: 'image',
      tags: ['serveur', 'png'],
      uploadedBy: 'user1',
      isPublic: true,
      usageCount: 3,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '5',
      title: 'Troisième image serveur',
      description: 'Troisième image du serveur local',
      filename: 'files-1761512216087-110734183.png',
      originalName: 'third-image.png',
      url: '/uploads/files-1761512216087-110734183.png',
      mimetype: 'image/png',
      size: 742000,
      type: 'image',
      tags: ['serveur', 'test'],
      uploadedBy: 'user1',
      isPublic: true,
      usageCount: 8,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '6',
      title: 'Document PDF',
      description: 'Un document PDF de test',
      filename: 'test.pdf',
      originalName: 'document-test.pdf',
      url: 'https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf',
      mimetype: 'application/pdf',
      size: 512000,
      type: 'document',
      tags: ['pdf', 'document'],
      uploadedBy: 'user1',
      isPublic: true,
      usageCount: 7,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '7',
      title: 'Document Word',
      description: 'Un document Microsoft Word',
      filename: 'rapport.docx',
      originalName: 'rapport-mensuel.docx',
      url: '/uploads/rapport-mensuel.docx',
      mimetype: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
      size: 845000,
      type: 'document',
      tags: ['word', 'rapport'],
      uploadedBy: 'user2',
      isPublic: false,
      usageCount: 12,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '8',
      title: 'Feuille Excel',
      description: 'Tableau de données Excel',
      filename: 'donnees.xlsx',
      originalName: 'donnees-ventes.xlsx',
      url: '/uploads/donnees-ventes.xlsx',
      mimetype: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
      size: 1200000,
      type: 'document',
      tags: ['excel', 'données'],
      uploadedBy: 'user3',
      isPublic: true,
      usageCount: 25,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '9',
      title: 'Présentation PowerPoint',
      description: 'Slides de présentation',
      filename: 'presentation.pptx',
      originalName: 'presentation-projet.pptx',
      url: '/uploads/presentation-projet.pptx',
      mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
      size: 2400000,
      type: 'document',
      tags: ['powerpoint', 'présentation'],
      uploadedBy: 'user1',
      isPublic: true,
      usageCount: 18,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '10',
      title: 'Fichier texte',
      description: 'Document texte simple',
      filename: 'notes.txt',
      originalName: 'notes-reunion.txt',
      url: '/uploads/notes-reunion.txt',
      mimetype: 'text/plain',
      size: 45000,
      type: 'document',
      tags: ['texte', 'notes'],
      uploadedBy: 'user2',
      isPublic: false,
      usageCount: 6,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '11',
      title: 'Documentation Markdown',
      description: 'Guide utilisateur en Markdown',
      filename: 'readme.md',
      originalName: 'README.md',
      url: '/uploads/README.md',
      mimetype: 'text/markdown',
      size: 78000,
      type: 'document',
      tags: ['markdown', 'documentation'],
      uploadedBy: 'user3',
      isPublic: true,
      usageCount: 35,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '12',
      title: 'Configuration JSON',
      description: 'Fichier de configuration',
      filename: 'config.json',
      originalName: 'app-config.json',
      url: '/uploads/app-config.json',
      mimetype: 'application/json',
      size: 12000,
      type: 'document',
      tags: ['json', 'config'],
      uploadedBy: 'user1',
      isPublic: false,
      usageCount: 4,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
    MediaItem(
      id: '13',
      title: 'Données CSV',
      description: 'Export de données CSV',
      filename: 'export.csv',
      originalName: 'export-clients.csv',
      url: '/uploads/export-clients.csv',
      mimetype: 'text/csv',
      size: 156000,
      type: 'document',
      tags: ['csv', 'données'],
      uploadedBy: 'user2',
      isPublic: true,
      usageCount: 8,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Test HTML5 Media Viewer'),
        backgroundColor: Colors.blue[600],
        foregroundColor: Colors.white,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Démonstration des composants HTML5',
              style: Theme.of(context).textTheme.headlineMedium?.copyWith(
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 8),
            Text(
              'Testez l\'affichage et l\'interaction avec différents types de médias.',
              style: Theme.of(context).textTheme.bodyLarge?.copyWith(
                color: Colors.grey[600],
              ),
            ),
            const SizedBox(height: 24),
            Expanded(
              child: GridView.builder(
                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 2,
                  crossAxisSpacing: 16,
                  mainAxisSpacing: 16,
                  childAspectRatio: 1.2,
                ),
                itemCount: _testMedias.length,
                itemBuilder: (context, index) {
                  final media = _testMedias[index];
                  return Card(
                    elevation: 4,
                    clipBehavior: Clip.antiAlias,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.stretch,
                      children: [
                        Expanded(
                          flex: 3,
                          child: Html5MediaViewer(
                            media: media,
                            fit: BoxFit.cover,
                            showControls: true,
                            autoPlay: false,
                          ),
                        ),
                        Expanded(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.all(8),
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                Text(
                                  media.title,
                                  style: const TextStyle(
                                    fontWeight: FontWeight.bold,
                                    fontSize: 14,
                                  ),
                                  maxLines: 1,
                                  overflow: TextOverflow.ellipsis,
                                ),
                                const SizedBox(height: 4),
                                Text(
                                  '${media.type.toUpperCase()} • ${MediaService.formatFileSize(media.size)}',
                                  style: TextStyle(
                                    color: Colors.grey[600],
                                    fontSize: 12,
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ),
                      ],
                    ),
                  );
                },
              ),
            ),
            const SizedBox(height: 16),
            Card(
              child: Padding(
                padding: const EdgeInsets.all(16),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      children: [
                        Icon(Icons.info_outline, color: Colors.blue[600]),
                        const SizedBox(width: 8),
                        Text(
                          'Fonctionnalités HTML5',
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            color: Colors.blue[600],
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 12),
                    const Text('✅ Affichage adaptatif selon le type de média'),
                    const SizedBox(height: 4),
                    const Text('✅ Contrôles interactifs pour vidéos et audios'),
                    const SizedBox(height: 4),
                    const Text('✅ Vue plein écran avec zoom pour images'),
                    const SizedBox(height: 4),
                    const Text('✅ Prévisualisation en temps réel des documents'),
                    const SizedBox(height: 4),
                    const Text('✅ Animations et effets visuels'),
                    const SizedBox(height: 4),
                    const Text('✨ NOUVEAU: Aperçu du contenu des documents'),
                    const SizedBox(height: 4),
                    const Text('📄 Supports: PDF, Word, Excel, PowerPoint, TXT, MD, JSON, CSV'),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}